
Review #: 1	
Criterium Description	Value
Abstract and Introduction are adequate?		Yes
Conclusions/Future Work are convincing?			Yes
Figures are adequate ?	in number and quality		Yes
Improve critical discussion ?	  validation		No
Improve English?  	    No
Needs comparative evaluation?		No
Needs more experimental results?		Yes
Originality		Newness of the ideas expressed	4
Overall Rating		Weighted value of above items	5
Paper formatting needs adjustment?        No
Presentation	 Structure/Length/English 5
References are up-to-date and appropriate?		Yes
Relevance  Paper fits one or more of the topic areas?	4
Significance	 Is the problem worth the given attention?	5
Technical Quality   Theoretical soundness/methodology		5
Scale: 1:Lowest Value;6:Highest Value

Observations for Author The paper presents the work to formally ground
SysML in the K formal language. This language is intended to support a
SysML model engineering tool set which is under development. The model
specification can be performed by using the SysML or writing textual
models directly in K. It will be interesting a capability to move from
a textual specification to the graphical one and vice versa (future
work). The benefits of this formal language can be multiple since
developers can exploit the good properties of formal languages such as
proving satisfiability, completeness, etc. The language also supports
multiple inheritance and recursive class definitions. I miss details
about limitations of the language. Is it covering all the constructs
of the SysML language? The example used is simple. It will be nice to
see more complex constructions and details about modeling behavior of
components. However, there is a practical use of the language which
means that the utility is proven. It would be nice to have more
information about the actual usage of the language and the perception
of the users.


Review #: 2	   
Criterium Description	Value
Abstract and Introduction are adequate?		No
Conclusions/Future Work are convincing?			Yes
Figures are adequate ?	in number and quality		Yes
Improve critical discussion ?	  validation		Yes
Improve English?  	    No
Needs comparative evaluation?		Yes
Needs more experimental results?		No
Originality		Newness of the ideas expressed	3
Overall Rating		Weighted value of above items	4
Paper formatting needs adjustment?        No
Presentation	 Structure/Length/English 4
References are up-to-date and appropriate?		Yes
Relevance  Paper fits one or more of the topic areas?	6
Significance	 Is the problem worth the given attention?	5
Technical Quality   Theoretical soundness/methodology		4
Scale: 1:Lowest Value;6:Highest Value

Observations for Author This paper proposes the formal language K as
an infrastructure to express and validate SysML models. The Abstract
fails to convince me that there is a problem to be solved; it explains
what the authors did but does not provide a justification as to why
this was necessary. The Introduction answers this, albeit not very
convincingly: the authors systematically mix up the concepts of
language and notation, and even that of modelling tools, by arguing
that UML and SysML are not optimal because they are
graphical. However, it is their notations what is graphical; the
metamodels defining these languages ar epurely abstract constructs,
and either UML or SysML models can be expressed using a textual
notation, for example. Weaknesses such as "tedious GUI operations" or
the need of "learning a large set of additional tools" to work with
these languages are weakneses of specific tool implementation, not of
the UML or SysML languages. The authors should recognise this and make
a criticism of UML and SysML based on their intrinsic properties
rather than on substandard tool implementations. In addition, the
hypothesise that some of the drawbacks of UML and SysML are driven by
the lack of a "simple textual language". I am not convinced. Again,
language is not "textual" or "graphical"; the language (an abstract
syntax) is an abstract entity, and only a notation (concrete syntax)
can be textual or graphical. For example, I can easily devise a
graphical notation for Z or VDM; or a textual notation for SysML or
UML. Furthermore, ontology languages such as OWL are formally defined
and based on description logic, and still drawing diagrams representig
models expressed in them is as tedious and cumbersome as using
UML. For these reasons, the authors are encouraged to revise the
justification of their research and provide solid evidence that they
are tackling the right problem. The authors also state that they
adhere to the school of thought that "modeling can be seen as
programming in a language where some parts of the model (program) at
any point in time are executable, and some maybe are not (yet)". I
have two objections to this. First of all, one does not simply "adhere
to a school of thought" in science; you need to provide a reason why
you do it, usually in the form of evidence or analytical
reasoning. Secondly, the view of the authors is extremely limiting,
and only works for modelling whose goal is to implement a software
system. Conceptual modelling with goals such as exploration or
communication of a complex reality are ruled out. I would suggest the
authors that they consider the opposite "school of thought":
programming is a kind of modelling geared towards a very specific
purpose, namely instructig a computer to do something. In summary, I
don't doubt that K can be useful as an infrastructure for SysML
models. But I am not covinced that the authors are tacklig the right
problem or that other solutions can be as good or better than the
proposed. In page 2, something is missing after "Europa Clipper
Mission," in parenthesis.


Review #: 3	    
Criterium Description	Value
Abstract and Introduction are adequate?		Yes
Conclusions/Future Work are convincing?			Yes
Figures are adequate ?	in number and quality		Yes
Improve critical discussion ?	  validation		No
Improve English?  	    No
Needs comparative evaluation?		No
Needs more experimental results?		No
Originality		Newness of the ideas expressed	4
Overall Rating		Weighted value of above items	5
Paper formatting needs adjustment?        Yes
Presentation	 Structure/Length/English 6
References are up-to-date and appropriate?		Yes
Relevance  Paper fits one or more of the topic areas?	6
Significance	 Is the problem worth the given attention?	5
Technical Quality   Theoretical soundness/methodology		5
Scale: 1:Lowest Value;6:Highest Value

Observations for Author The paper presents a brief overview of K, a
new formal specification language with a textual notation, built with
the idea of SysML model verifiability (the idea is to translate SysML
models to K specifications). K is an object-oriented language that
supports constraints (predicate logic). The paper then describes how K
specifications can be translated to SMT-LIB, a LISP-like language for
satisfiability checking with SMT solvers, in order to check the
satisfiability of the source specification (model), mostly the
consistency of its (first-order predicate logic) constraints. The
paper sounds technically correct, and is also correctly structured and
written. I still have a lot of questions related to K, but as the
paper's goal was not to present K in details, they are of little
relevance. For example: Why doesn't K support ordered unique
collections (ordered sets), as it supports only three out of four
possible combinations of uniqueness and ordering? What is the
difference between properties declared with var (Figure 1, line 15)
and those without? It seems that the value returned from functions is
implicit (the last constructed value), but it is not clear how? The
syntax, wrt. the end of a statement is unclear – looks to be implicit
(end of line)? Etc. Minor remarks and typos: - Section 3.2, first
para: “subsets of formulas generated from each class” instead of
“subsets from each class formulas generated”

